[{"/Users/archiver/Desktop/zeo-app/src/invariant.tsx":"1","/Users/archiver/Desktop/zeo-app/src/Home.jsx":"2","/Users/archiver/Desktop/zeo-app/src/index.jsx":"3","/Users/archiver/Desktop/zeo-app/src/Result.jsx":"4","/Users/archiver/Desktop/zeo-app/src/reportWebVitals.ts":"5","/Users/archiver/Desktop/ren-app/src/Result.jsx":"6","/Users/archiver/Desktop/ren-app/src/invariant.tsx":"7","/Users/archiver/Desktop/ren-app/src/Home.jsx":"8"},{"size":2654,"mtime":1611926172768,"results":"9","hashOfConfig":"10"},{"size":7084,"mtime":1611987356711,"results":"11","hashOfConfig":"10"},{"size":839,"mtime":1611971817073,"results":"12","hashOfConfig":"10"},{"size":16596,"mtime":1612015848883,"results":"13","hashOfConfig":"10"},{"size":426,"mtime":1604930433810,"results":"14","hashOfConfig":"10"},{"size":16743,"mtime":1612185499994,"results":"15","hashOfConfig":"16"},{"size":2654,"mtime":1612184706959,"results":"17","hashOfConfig":"16"},{"size":6632,"mtime":1612187736562,"results":"18","hashOfConfig":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13apf5d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vimp97",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/archiver/Desktop/zeo-app/src/invariant.tsx",[],"/Users/archiver/Desktop/zeo-app/src/Home.jsx",[],"/Users/archiver/Desktop/zeo-app/src/index.jsx",[],"/Users/archiver/Desktop/zeo-app/src/Result.jsx",[],"/Users/archiver/Desktop/zeo-app/src/reportWebVitals.ts",[],"/Users/archiver/Desktop/ren-app/src/Result.jsx",[],"/Users/archiver/Desktop/ren-app/src/invariant.tsx",[],"/Users/archiver/Desktop/ren-app/src/Home.jsx",["36","37"],"import React, { useState } from \"react\";\nimport { DatePicker, Picker, List } from \"antd-mobile\";\nimport { Lunar } from \"lunar-javascript\";\nimport moment from \"moment\";\nimport { Card, Icon, Button } from \"zhui\";\nimport { SxEnum, TimeEnum } from \"./invariant\";\nimport { useHistory } from \"react-router-dom\";\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\n\nconst d = Lunar.fromDate(now);\nconst timeZhi = d.getTimeZhi();\n\nconst years = [];\n\nfor (let i = 1970; i <= now.getFullYear(); i++) {\n  const newYear = Lunar.fromYmd(i, 1, 1);\n  const realNewYear = newYear.getJieQiTable()[\"立春\"];\n\n  const curYear = realNewYear.next(1);\n  const prevYear = realNewYear.next(-1);\n\n  const $curYear = curYear.getLunar();\n  const $prevYear = prevYear.getLunar();\n\n  const curGanZhi = $curYear.getYearInGanZhiByLiChun();\n  const [, curZhi] = [...curGanZhi];\n  const curSx = SxEnum[curZhi];\n\n  const prevGanZhi = $prevYear.getYearInGanZhiByLiChun();\n  const [, prevZhi] = [...prevGanZhi];\n  const prevSx = SxEnum[prevZhi];\n\n  const isAfter = moment(now).isAfter(moment(realNewYear.toYmd()));\n\n  const children = isAfter\n    ? [\n        {\n          label: ` ${curGanZhi} - ${curSx}`,\n          value: curYear.toYmd(),\n        },\n        {\n          label: ` ${prevGanZhi} - ${prevSx}`,\n          value: prevYear.toYmd(),\n        },\n      ]\n    : [\n        {\n          label: ` ${prevGanZhi} - ${prevSx}`,\n          value: prevYear.toYmd(),\n        },\n      ];\n\n  years.push({\n    label: i,\n    value: i,\n    children,\n  });\n}\n\nconst { children } = years.find(({ value }) => {\n  return value === now.getFullYear();\n});\n\nconst isAfter = moment(now).isAfter(moment(d.getJieQiTable()[\"立春\"].toYmd()));\nconst defaultYearInfo = (isAfter || children.length ===1) ? children[0].value : children[1].value;\nconst defaultYear = [now.getFullYear(), defaultYearInfo];\n\nconst gender = [\n  {\n    value: 1,\n    label: \"男\",\n  },\n  {\n    value: 0,\n    label: \"女\",\n  },\n];\n\nconst month = [\n  {\n    label: \"子\",\n    value: 1,\n  },\n  {\n    label: \"丑\",\n    value: 2,\n  },\n  {\n    label: \"寅\",\n    value: 3,\n  },\n  {\n    label: \"卯\",\n    value: 4,\n  },\n  {\n    label: \"辰\",\n    value: 5,\n  },\n  {\n    label: \"巳\",\n    value: 6,\n  },\n  {\n    label: \"午\",\n    value: 7,\n  },\n  {\n    label: \"未\",\n    value: 8,\n  },\n  {\n    label: \"申\",\n    value: 9,\n  },\n  {\n    label: \"酉\",\n    value: 10,\n  },\n  {\n    label: \"戌\",\n    value: 11,\n  },\n  {\n    label: \"亥\",\n    value: 12,\n  },\n];\n\n// 正月建寅 亥为月将\n// 二月建卯 戌为月将\n// 三月建辰 酉为月将\n// 四月建巳 申为月将\n// 五月建午 未为月将\n// 六月建未 午为月将\n// 七月建申 巳为月将\n// 八月建酉 辰为月将\n// 九月建戌 卯为月将\n// 十月建亥 寅为月将\n// 十一月建子 丑为月将\n// 十二月建丑 子为月将\nconst getGeneral = (date) => {\n  const d = Lunar.fromDate(date);\n  const lunarMonth = Math.abs(d.getMonth());\n  return [13 - lunarMonth];\n};\n\nconst Home = () => {\n  const [state, setState] = useState({\n    date: now,\n    time: now,\n    general: getGeneral(now),\n    year: defaultYear,\n    gender: [1],\n  });\n  const history = useHistory();\n\n  return (\n    <div id=\"home\">\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Card\n          cornerLeft=\"趋吉\"\n          cornerRight=\"避凶\"\n          img={<Icon color=\"#fff\" type=\"refresh\" style={{ fontSize: 100 }} />}\n          title=\"大六壬占卦\"\n          underline\n          width=\"100%\"\n          style={{ height: \"100vh\", maxWidth: \"auto\" }}\n        >\n          <p>先占不测之风云，泄元机藏之秘</p>\n          <List className=\"date-picker-list\">\n            <Picker\n              data={gender}\n              value={state.gender}\n              onChange={(gender) => {\n                setState((state) => ({ ...state, gender }));\n              }}\n              cols={1}\n            >\n              <List.Item arrow=\"horizontal\">性别</List.Item>\n            </Picker>\n\n            <Picker\n              data={years}\n              value={state.year}\n              onChange={(year) => {\n                setState((state) => ({ ...state, year }));\n              }}\n              cols={2}\n            >\n              <List.Item arrow=\"horizontal\">生辰</List.Item>\n            </Picker>\n            <DatePicker\n              mode=\"date\"\n              title=\"占日\"\n              value={state.date}\n              onChange={(date) => {\n                const general = getGeneral(date);\n                setState((state) => ({ ...state, date, general }));\n              }}\n            >\n              <List.Item arrow=\"horizontal\">占日</List.Item>\n            </DatePicker>            \n            <DatePicker\n              mode=\"time\"\n              minuteStep={2}\n              use12Hours\n              value={state.time}\n              onChange={(time) => {\n                setState((state) => ({ ...state, time }));\n              }}\n            >\n              <List.Item arrow=\"horizontal\">占时</List.Item>\n            </DatePicker>\n            <Picker\n              data={month}\n              value={state.general}\n              onChange={(general) => {\n                setState((state) => ({ ...state, general }));\n              }}\n              cols={1}\n            >\n              <List.Item arrow=\"horizontal\">月将</List.Item>\n            </Picker>\n\n            <List.Item className=\"submit-block\">\n              <Button\n                theme=\"yuanshan\"\n                outline\n                size=\"large\"\n                style={{ backgroundColor: \"transparent\" }}\n                onClick={() => {\n                  const { date, time, gender, year, general } = state;\n                  const $day = moment(date);\n                  const $time = moment(time, \"HH:mm\");\n                  const $d = $day.set({\n                    hour: $time.get(\"hour\"),\n                    minute: $time.get(\"minute\"),\n                    second: $time.get(\"second\"),\n                  });\n                  const [$general] = general;\n                  const [$gender] = gender;\n                  const [, ymd] = year;\n                  history.push({\n                    pathname: \"/ace\",\n                    state: {\n                      ymd: ymd,\n                      gender: $gender,\n                      $d: $d.toDate(),\n                      general: $general,\n                    },\n                  });\n                }}\n              >\n                起课\n              </Button>\n            </List.Item>\n          </List>\n        </Card>\n      </div>\n    </div>\n  );\n};\nexport default Home;\n",{"ruleId":"38","severity":1,"message":"39","line":6,"column":18,"nodeType":"40","messageId":"41","endLine":6,"endColumn":26},{"ruleId":"38","severity":1,"message":"42","line":13,"column":7,"nodeType":"40","messageId":"41","endLine":13,"endColumn":14},"no-unused-vars","'TimeEnum' is defined but never used.","Identifier","unusedVar","'timeZhi' is assigned a value but never used."]